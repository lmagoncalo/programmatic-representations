
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BACKGROUND LPAR NAME RPAR RULE STARTSHAPE VALUEstatement : startshape_statement statement\n    \t\t\t| rule_statement statement\n    \t\t\t| background_statement statement\n    \t\t\t| startshape_statement\n    \t\t\t| rule_statement\n    \t\t\t| background_statement startshape_statement : STARTSHAPE NAMEparameter_list : NAME values_list parameter_list\n                    | background_statement : BACKGROUND LPAR parameter_list RPARvalues_list : VALUE values_list\n                | opt_value : VALUE \n                | rule_statement : RULE NAME opt_value LPAR node_list RPARnode_list : NAME LPAR parameter_list RPAR node_list\n                | '
    
_lr_action_items = {'STARTSHAPE':([0,2,4,6,8,21,27,],[1,1,1,1,-7,-10,-15,]),'NAME':([1,3,13,16,18,19,20,24,26,29,],[8,10,16,-12,22,-12,16,-11,16,22,]),'LPAR':([7,10,14,15,22,],[13,-14,18,-13,26,]),'RULE':([0,2,4,6,8,21,27,],[3,3,3,3,-7,-10,-15,]),'RPAR':([13,16,17,18,19,20,23,24,25,26,28,29,30,],[-9,-12,21,-17,-12,-9,27,-11,-8,-9,29,-17,-16,]),'VALUE':([10,16,19,],[15,19,19,]),'BACKGROUND':([0,2,4,6,8,21,27,],[7,7,7,7,-7,-10,-15,]),'$end':([2,4,5,6,8,9,11,12,21,27,],[-4,-6,0,-5,-7,-1,-3,-2,-10,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'opt_value':([10,],[14,]),'startshape_statement':([0,2,4,6,],[2,2,2,2,]),'parameter_list':([13,20,26,],[17,25,28,]),'node_list':([18,29,],[23,30,]),'background_statement':([0,2,4,6,],[4,4,4,4,]),'statement':([0,2,4,6,],[5,9,11,12,]),'rule_statement':([0,2,4,6,],[6,6,6,6,]),'values_list':([16,19,],[20,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> startshape_statement statement','statement',2,'p_statement','lexer.py',47),
  ('statement -> rule_statement statement','statement',2,'p_statement','lexer.py',48),
  ('statement -> background_statement statement','statement',2,'p_statement','lexer.py',49),
  ('statement -> startshape_statement','statement',1,'p_statement','lexer.py',50),
  ('statement -> rule_statement','statement',1,'p_statement','lexer.py',51),
  ('statement -> background_statement','statement',1,'p_statement','lexer.py',52),
  ('startshape_statement -> STARTSHAPE NAME','startshape_statement',2,'p_startshape','lexer.py',62),
  ('parameter_list -> NAME values_list parameter_list','parameter_list',3,'p_parameter_list','lexer.py',67),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list','lexer.py',68),
  ('background_statement -> BACKGROUND LPAR parameter_list RPAR','background_statement',4,'p_background','lexer.py',76),
  ('values_list -> VALUE values_list','values_list',2,'p_values_list','lexer.py',82),
  ('values_list -> <empty>','values_list',0,'p_values_list','lexer.py',83),
  ('opt_value -> VALUE','opt_value',1,'p_opt_value','lexer.py',91),
  ('opt_value -> <empty>','opt_value',0,'p_opt_value','lexer.py',92),
  ('rule_statement -> RULE NAME opt_value LPAR node_list RPAR','rule_statement',6,'p_rule_statement','lexer.py',100),
  ('node_list -> NAME LPAR parameter_list RPAR node_list','node_list',5,'p_node_list','lexer.py',105),
  ('node_list -> <empty>','node_list',0,'p_node_list','lexer.py',106),
]
